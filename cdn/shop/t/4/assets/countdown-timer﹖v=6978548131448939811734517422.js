if(!customElements.get("countdown-timer")){class t extends HTMLElement{constructor(){super(),this.endDate=new Date(this.dataset.endDate).getTime(),Number(this.endDate)&&(this.closest(".marquee-item")||window.initLazyScript(this,this.init.bind(this)))}init(){this.daysEl=this.querySelector(".js-days .countdown__number-part"),this.hoursPart1El=this.querySelector(".js-hours .countdown__number-part-1"),this.hoursPart2El=this.querySelector(".js-hours .countdown__number-part-2"),this.minsPart1El=this.querySelector(".js-mins .countdown__number-part-1"),this.minsPart2El=this.querySelector(".js-mins .countdown__number-part-2"),this.secsPart1El=this.querySelector(".js-secs .countdown__number-part-1"),this.secsPart2El=this.querySelector(".js-secs .countdown__number-part-2"),this.second=1e3,this.minute=60*this.second,this.hour=60*this.minute,this.day=24*this.hour;const e=getComputedStyle(this).getPropertyValue("--countdown-number-transition-duration");e&&(this.numberTransitionDurationMS=t.durationToMS(e),this.animated=this.numberTransitionDurationMS>0),this.animated&&this.querySelectorAll(".countdown__number:is(.js-hours, .js-mins, .js-secs) .countdown__number-part").forEach((t=>{t.innerHTML="";const e=document.createElement("span");e.className="countdown__number-part-current",e.textContent="0";const s=document.createElement("span");s.className="countdown__number-part-previous",s.textContent="0",t.append(e,s)})),this.timer(),this.interval=setInterval(this.timer.bind(this),this.second),this.setAttribute("loaded","")}timer(){const t=this.endDate-new Date;if(t<0)return clearInterval(this.interval),void this.setAttribute("loaded","");const e=Math.floor(t/this.day),s=Math.floor(t/this.hour),n=Math.floor(t/this.minute),r=Math.floor(t/this.second);0===e&&(this.daysEl.closest(".countdown__item").classList.add("countdown__item--is-0"),this.daysEl.classList.add("countdown__number-part--is-0")),this.daysEl.textContent=e;const i=String(s-24*e).padStart(2,"0");this.setPartValue(this.hoursPart1El,i[0],!0),this.setPartValue(this.hoursPart2El,i[1]);const o=String(n-60*s).padStart(2,"0");this.setPartValue(this.minsPart1El,o[0],!0),this.setPartValue(this.minsPart2El,o[1]);const a=String(r-60*n).padStart(2,"0");this.setPartValue(this.secsPart1El,a[0],!0),this.setPartValue(this.secsPart2El,a[1]),this.setAttribute("loaded","")}setPartValue(t,e,s){if(s&&t.classList.toggle("countdown__number-part--is-0","0"===e),this.animated){const s=t.querySelector(".countdown__number-part-current");if(e!==s.textContent){const n=t.querySelector(".countdown__number-part-previous");t.classList.add("countdown__number-part--start-transition"),n.textContent=s.textContent,s.textContent=e,setTimeout((()=>{requestAnimationFrame((()=>t.classList.remove("countdown__number-part--start-transition")))}),20)}}else t.textContent=e}static durationToMS(t){if(t.indexOf("ms")>0)return parseInt(t,10);if(t.indexOf("s")>0)return 1e3*parseFloat(t);throw new Error(`Duration unit not recognised: ${t}`)}}customElements.define("countdown-timer",t)}